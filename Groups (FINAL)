# -------------------------------------------------
# üîì Set Office 365 login credentials
# -------------------------------------------------
$UserPrincipalName = "edavies-a@purus.com"
$PlainTextPassword = "Friday21+"  # Password stored in plain text (not secure)

# Convert the plain text password into a SecureString
$SecurePassword = ConvertTo-SecureString $PlainTextPassword -AsPlainText -Force

# Convert the SecureString password into a PSCredential object
$Credentials = New-Object System.Management.Automation.PSCredential($UserPrincipalName, $SecurePassword)

# -------------------------------------------------
# ‚úÖ Automatically connect to Office 365 (Microsoft 365)
# -------------------------------------------------
Connect-MsolService -Credential $Credentials

# -------------------------------------------------
# üìã Select Specific Groups by Object IDs
# -------------------------------------------------

# Specify the Object IDs of the groups
$groupObjectIds = @(
    "ee72e8a6-5d08-44cd-81a0-a46c15256ba2",
    "751262e4-d71b-4e50-88c1-7e653be34fd0"
)

# Retrieve the groups using their Object IDs
$groups = Get-MsolGroup | Where-Object { $groupObjectIds -contains $_.ObjectId }

# Check if the groups exist
if ($groups.Count -eq 0) {
    Write-Host "‚ùå No groups found with the specified Object IDs."
    exit
}

# Display the groups found
Write-Host "Found the following groups:"
$groups | ForEach-Object { Write-Host "‚úî Group: $($_.DisplayName) - Object ID: $($_.ObjectId)" }

# -------------------------------------------------
# üìã Select All Users
# -------------------------------------------------

# Get all Office 365 users
$allUsers = Get-MsolUser | Select-Object DisplayName, UserPrincipalName

# Let the user select MULTIPLE users from the grid view
$selectedUsers = $allUsers | Out-GridView -Title "Select Users to Add" -PassThru

# -------------------------------------------------
# ‚ûï Add the selected users to the groups
# -------------------------------------------------
if ($null -ne $selectedUsers -and $selectedUsers.Count -gt 0) {
    foreach ($user in $selectedUsers) {
        foreach ($group in $groups) {
            try {
                Add-MsolGroupMember -GroupObjectId $group.ObjectId -GroupMemberObjectId $user.ObjectId
                Write-Host "‚úî Added $($user.UserPrincipalName) to $($group.DisplayName)"
            } catch {
                Write-Warning "‚ö† Failed to add user $($user.UserPrincipalName) to $($group.DisplayName): $_"
            }
        }
    }
} else {
    Write-Host "Selection cancelled or incomplete. No changes made."
}

# -------------------------------------------------
# üîö Disconnect Office 365 Session
# -------------------------------------------------
Disconnect-MsolService
